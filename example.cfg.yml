dns:
  ttl: 5
  listen:
    - host: <%= interface_ipv4('docker0') %>
      port: 5300

  upstream:
    - 8.8.8.8
    - 8.8.4.4

  zones:
    - .local
    - .docker

  setup: |
    etcd.dockerhost.docker <%= interface_ipv4('docker0') %>

  spec: |
    <%= container['Config']['Env'].fetch('SERVICE_NAME', container['Name'][1..-1]) %>.docker
    <%= container['Config']['Hostname'] %>.docker

etcd:
  server:
    host: <%= interface_ipv4('docker0') %>
    port: 4001

  setup: |
    absent_recursive /skydns/docker
    ensure /skydns/docker/dockerhost/etcd <%= as_json(host: interface_ipv4('docker0'), port: '4001') %>

  sets:
    skydns: |
      <% if container['Config']['Env'].has_key? 'SERVICES' %>
        <% container['Config']['Env']['SERVICES'].split(',').each do |s| %>
          ensure <%= "/skydns/#{s.split(':')[0].split('.').reverse.join('/')}" %> <%= as_json(host: container['NetworkSettings']['IPAddress'], port: s.split(':')[1]) %>
        <% end %>
      <% elsif container['Config']['Env'].has_key? 'SERVICE_NAME' %>
        ensure <%= "/skydns/#{container['Config']['Env']['SERVICE_NAME'].split('.').reverse.join('/')}" %> <%= as_json(host: container['NetworkSettings']['IPAddress']) %>
      <% else %>
        ensure <%= "/skydns/#{(container['Config']['Hostname'] + ".docker").split('.').reverse.join('/')}" %> <%= as_json(host: container['NetworkSettings']['IPAddress']) %>
        ensure <%= "/skydns/#{(container['Name'][1..-1] + ".docker").split('.').reverse.join('/')}" %> <%= as_json(host: container['NetworkSettings']['IPAddress']) %>
      <% end %>

    vhosts: |
      <% container['Config']['Env'].fetch('VHOSTS', '').split(',').each do |vh| %>
        ensure <%= "/vhosts/#{vh.split(':')[0]}/#{container['Id']}" %> <%= as_json(host: container['NetworkSettings']['IPAddress'], port: vh.split(':').fetch(1, '80')) %>
      <% end %>

templates:
  auto_haproxy:
    linked_container:
      name:   "mydb"
      action: "restart"
      # Other examples:
      # action: "shell:cat /proc/cpuinfo > /tmp/cpuinfo"
      # action: "exec:touch /tmp/foobar"
      # action: "kill:SIGHUP"

    files:
      - file:     "<%= container['Volumes']['/var/lib/mysql'] %>/foo.cfg"
        template: "<%= container['Volumes']['/var/lib/mysql'] %>/foo.cfg.erb"

    action: "echo 'This happens on the host' > /tmp/foo.test"
